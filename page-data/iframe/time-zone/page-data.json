{"componentChunkName":"component---antv-gatsby-theme-antv-site-templates-iframe-tsx","path":"/iframe/time-zone","result":{"pageContext":{"relativePath":"data-entry/date-picker/demo/time-zone.js","absolutePath":"/Users/lxl/Documents/hand/c7n-website/example/procmp/data-entry/date-picker/demo/time-zone.js","order":9,"filename":"time-zone.js","title":{"zh":"显示时区","en":"show time zone"},"description":{"zh":"显示时区。\n","en":"show time zone.\n"},"screenshot":"","height":300,"category":"pro","iframe":"/iframe/time-zone","source":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configure } from 'choerodon-ui';\nimport { Form, TimePicker, DateTimePicker, SelectBox } from 'choerodon-ui/pro';\nimport moment from 'moment';\n\nconst { Option } = SelectBox;\nconst App = () => {\n  const [value, setValue] = React.useState(() => moment());\n  const [isGMT, setIsGMT] = React.useState(true);\n  // const timeZone = React.useMemo(() => {}, [isGMT]);\n\n  React.useEffect(() => {\n    configure({\n      formatter: {\n        timeZone: isGMT\n          ? ' ([GTM]+8)'\n          : (moment) => (\n              <span key=\"timeZone\" style={{ color: 'gray' }}>\n                {' '}\n                {moment.format('Z')}\n              </span>\n            ),\n      },\n    });\n  }, [isGMT]);\n  return (\n    <Form>\n      <SelectBox value={isGMT} onChange={setIsGMT}>\n        <Option value>GMT</Option>\n        <Option value={false}>UTC</Option>\n      </SelectBox>\n      <DateTimePicker value={value} onChange={setValue} />\n      <TimePicker value={value} onChange={setValue} timeZone=\"ZZ\" />\n    </Form>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('container'));\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"react\", \"react-dom\", \"choerodon-ui\", \"choerodon-ui/pro\", \"moment\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"react\"), require(\"react-dom\"), require(\"choerodon-ui\"), require(\"choerodon-ui/pro\"), require(\"moment\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.react, global.reactDom, global.choerodonUi, global.pro, global.moment);\n    global.timeZone = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_react, _reactDom, _choerodonUi, _pro, _moment) {\n  \"use strict\";\n\n  _react = _interopRequireDefault(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n  _moment = _interopRequireDefault(_moment);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var Option = _pro.SelectBox.Option;\n\n  var App = function App() {\n    var _React$useState = _react.default.useState(function () {\n      return (0, _moment.default)();\n    }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n    var _React$useState3 = _react.default.useState(true),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isGMT = _React$useState4[0],\n        setIsGMT = _React$useState4[1]; // const timeZone = React.useMemo(() => {}, [isGMT]);\n\n\n    _react.default.useEffect(function () {\n      (0, _choerodonUi.configure)({\n        formatter: {\n          timeZone: isGMT ? ' ([GTM]+8)' : function (moment) {\n            return /*#__PURE__*/_react.default.createElement(\"span\", {\n              key: \"timeZone\",\n              style: {\n                color: 'gray'\n              }\n            }, ' ', moment.format('Z'));\n          }\n        }\n      });\n    }, [isGMT]);\n\n    return /*#__PURE__*/_react.default.createElement(_pro.Form, null, /*#__PURE__*/_react.default.createElement(_pro.SelectBox, {\n      value: isGMT,\n      onChange: setIsGMT\n    }, /*#__PURE__*/_react.default.createElement(Option, {\n      value: true\n    }, \"GMT\"), /*#__PURE__*/_react.default.createElement(Option, {\n      value: false\n    }, \"UTC\")), /*#__PURE__*/_react.default.createElement(_pro.DateTimePicker, {\n      value: value,\n      onChange: setValue\n    }), /*#__PURE__*/_react.default.createElement(_pro.TimePicker, {\n      value: value,\n      onChange: setValue,\n      timeZone: \"ZZ\"\n    }));\n  };\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n});"}},"staticQueryHashes":["3000541721","653731124"]}